:root {
    scroll-behavior: smooth;
    min-width: 300px;
    background-color: var(--background);
    font-size: 16px;
    font-family: 'Inter', sans-serif;
    font-weight: 500;
    color: var(--text);
}
@media (min-width: 1366px) {
    :root {
        font-size: clamp(16px, (16 / 1366) * 100vw, 18px);
    }
}

:root.light {
    --text: #1A1414;
    --background: #E7E5E4;
    --primary: #992222;
    --secondary: #420000;
    --accent: #FD0D0D;
}
:root.dark {
    --text: #EBE5E5;
    --background: #1B1918;
    --primary: #DD6464;
    --secondary: #FFBDBD;
    --accent: #F20202;
}
:root {
    --text-d1: color-mix(in oklab, var(--text) 80%, black);
    --text-b1: color-mix(in oklab, var(--text) 80%, white);
    --background-d1: color-mix(in oklab, var(--background) 85%, black);
    --background-b1: color-mix(in oklab, var(--background) 50%, white);
    --primary-d1: color-mix(in oklab, var(--primary) 80%, black);
    --primary-b1: color-mix(in oklab, var(--primary) 80%, white);
    --secondary-b1: color-mix(in oklab, var(--secondary) 80%, black);
    --secondary-b1: color-mix(in oklab, var(--secondary) 80%, white);
    --accent-d1: color-mix(in oklab, var(--accent) 80%, black);
    --accent-b1: color-mix(in oklab, var(--accent) 80%, white);
}
::selection {
    background-color: color-mix(in oklab, var(--accent) 80%, transparent);
    color: var(--text-d1);
}

:root.light .hide-light {
    display: none;
}
:root.dark .hide-dark {
    display: none;
}
:root.dark .dark\:invert {
    filter: invert(1);
}

body > * {
    max-width: 1366px;
    margin-left: auto;
    margin-right: auto;
}

nav {
    position: sticky;
    z-index: 1;
    top: 0;
    margin-top: 1rem;
    margin-bottom: 4rem;
    padding: 1rem clamp(1rem, calc(16 / 1366 * 100vw), 2rem);
}
nav > ul {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
    font-size: 1.2rem;
    list-style-position: inside;
    list-style-type: upper-roman;
}
nav > ul li::marker {
    color: var(--primary-b1);
}
nav > ul li[data-marker]::marker {
    content: attr(data-marker);
}

header {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    position: relative;
}
header > img {
    image-rendering: pixelated;
    position: absolute;
    bottom: 0;
    right: 1rem;
    width: 2rem;
    height: 2rem;
}
@media (max-width: 42rem) {
    header > img {
        display: none;
    }
}
header > figure {
    flex: 1 1 auto;
    position: relative;
    padding-left: 1rem;
}
header > figure > img {
    height: 10rem;
}
header > h1 {
    writing-mode: vertical-lr;
    flex: 0 0 auto;
    width: 25%;
    padding-right: clamp(1rem, calc(16 / 1366 * 100vw), 2rem);
    font-size: 3rem;
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;
    line-height: 2.5rem;
    color: #000000;
    letter-spacing: .1em;
}
:root.dark header > h1 {
    color: #FFFFFF;
}
header > p {
    flex: 1 0 100%;
    padding: 0 1rem;
    font-size: 2.5rem;
    line-height: 4.35rem;
    letter-spacing: -.03em;
    font-family: 'Open Sans', sans-serif;
    text-wrap: balance;
}
header > p > span.marker {
    -webkit-box-decoration-break: clone;
    -moz-background-inline-policy: clone;
    box-decoration-break: clone;
    padding: .15em .2em;
    background-color: var(--primary);
    border-radius: .25rem;
    color: #FFFFFF;
}
:root.dark header > p > span.marker {
    background-color: var(--primary-d1);
}
header > p > span.marker:before {
    content: open-quote;
}
header > p > span.marker:after {
    content: close-quote;
}

section {
    column-width: 20rem;
    column-rule: 1px dotted var(--text-b1);
    column-gap: 3rem;
    padding: 4rem clamp(1rem, calc(16 / 1366 * 100vw), 2rem);
}
@media only screen and not (prefers-reduced-motion) {
    main > section, main ~ section {
        animation: reveal-section ease-out both;
        animation-timeline: view(block);
        animation-range: entry 0 entry 50vh;
    }
    @keyframes reveal-section {
        from {
            opacity: 0;
            filter: blur(8rem);
        }
    }
}

section > h2,
section > h3,
section > .block {
    break-inside: avoid-column;
}

section > h2,
section > h3 {
    padding-bottom: 2rem;
    font-family: 'Open Sans', sans-serif;
    letter-spacing: -.05em;
}

body {
    counter-reset: heading;
}

section > h2 {
    font-size: 3.5rem;
    line-height: 3rem;
    counter-increment: heading;
    counter-reset: heading-2;
}
section > h2:before {
    content: counter(heading, upper-roman) '.' / '';
    position: absolute;
    transform: translateX(-150%);
    color: var(--primary);
    font-size: .75em;
}
@media (max-width: 1450px) {
    :root {
        scroll-padding-top: 3rem;
    }
    section > h2:before {
        transform: translateY(-100%);
        font-size: .5em;
    }
}

section > h3 {
    font-size: 2.5rem;
    line-height: 2rem;
    counter-increment: heading-2;
}
section > h3:before {
    content: counter(heading-2, lower-alpha) '.' / '';
    position: absolute;
    transform: translateX(-150%);
    color: var(--primary);
    font-size: .75em;
}
@media (max-width: 1450px) {
    section > h3:before {
        transform: translateY(-100%);
        font-size: .5em;
    }
}

section > hr,
section > .full-row {
    column-span: all;
}
section > hr {
    margin-top: 2rem;
    border: none;
}

section p {
    padding-bottom: 1rem;
    hyphens: auto;
}

section img {
    object-fit: cover;
    width: 100%;
    max-width: 100%;
    border-radius: .2rem;
}

section > ul > li {
    break-inside: avoid-column;
    margin-bottom: 2rem;
    border-bottom: .15rem dotted var(--text);
}
section > ul > li > h3,
section > ul > li > h4 {
    padding-bottom: .5rem;
    font-size: 1.5rem;
}
section > ul > li > a {
    display: block;
    padding-bottom: .5rem;
    color: var(--primary-b1);
}
section > ul > li > a:after {
    float: right;
    font-size: 1.2rem;
}
section > ul > li > a[target="_blank"]:after {
    content: '\29C9' / '';
}
section > ul > li > a[href^="#"]:after {
    content: '\21B3' / '';
}
section > ul > li > a[download]:after, section > ul > li > a[is="print-page"]:after {
    content: '\1F5C1' / '';
}
section > ul > li > a.disabled {
    color: var(--secondary);
    pointer-events: none;
}
section > ul > li > a.disabled:after {
    content: none;
}
section > ul.grid {
    display: grid;
    gap: .5rem;
    grid-template-columns: repeat(auto-fill, 1fr);
    grid-auto-flow: row dense;
}
@media (min-width: 24rem) {
    section > ul.grid {
        grid-template-columns: repeat(auto-fill, minmax(24rem, 1fr));
    }
}
@media (min-width: 16rem) {
    section > ul.grid.dense {
        grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));
    }
}
section > ul.grid > li {
    margin: 0;
    border: none;
}
section > ul.grid > li > a {
    text-underline-offset: .1em;
    padding-bottom: 0;
    line-height: 2em;
    color: var(--text);
}
section > ul.grid > li > a:after {
    color: var(--primary-d1);
}
section > ul.grid.dense {
    gap: .4rem;
}
section > ul.grid.dense > li {
    max-width: 100%;
}
section > ul.grid.dense > li > a:after {
    font-size: 1rem;
}

footer {
    padding: 4rem 2rem 6rem 2rem;
    text-align: center;
}
footer > img {
    image-rendering: pixelated;
    width: 100%;
    max-width: 69rem;
    height: 4rem;
    margin: 0 auto;
}

form {
    display: grid;
}
@media (min-width: 50rem) {
    form {
        grid-template-columns: 1fr 2fr;
    }
}
form label {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
}
form input,
form textarea {
    max-width: 100%;
    margin-bottom: 2rem;
    background-color: var(--background-d1);
    border-bottom: .2rem dotted currentcolor;
    border-radius: .2rem .2rem 0 0;
    font: inherit;
    color: inherit;
}
form input::placeholder,
form textarea::placeholder {
    color: var(--text-b1);
}
form input[readonly],
form textarea[readonly] {
    background-color: var(--background-b1);
    cursor: wait;
    border-color: transparent;
    color: var(--text-b1);
}
form input {
    padding: 0 1rem;
    line-height: 3rem;
}
form input[type="submit"] {
    margin-top: 1rem;
    margin-right: auto;
    padding: 0 2rem;
    background-color: var(--text);
    cursor: pointer;
    border-bottom: none;
    border-radius: .2rem;
    color: var(--background);
}
form input[type="submit"][readonly] {
    background-color: var(--text-b1);
    cursor: wait;
    color: var(--background-d1);
}
form textarea {
    resize: none;
    overflow: hidden;
    min-height: 12rem;
    padding: 1rem;
    padding-bottom: 3rem;
    line-height: 2rem;
}


input[is="theme-switch"] {
    display: none;
}
input[is="theme-switch"] + label {
    user-select: none;
    cursor: pointer;
}

:has(span[is="self-typing"]) {
    position: relative;
}
.type-async--cursor {
    user-select: none;
    display: block;
    position: absolute;
    top: 0px;
    left: 0px;
    font-weight: 900;
    color: var(--primary);
}
