header {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
  position: relative;

  > img {
    image-rendering: pixelated;
    position: absolute;
    bottom: 0;
    right: 1rem;
    width: 2rem;
    height: 2rem;

    @media (max-width: 42rem) {
      display: none ! important;
      background-color: red;
    }
  }

  > figure {
    flex: 1 1 auto;
    position: relative;
    padding-left: 1rem;

    > img {
      height: 10rem;
    }
  }

  > h1 {
    writing-mode: vertical-lr;
    flex: 0 0 auto;
    width: 25%;
    padding-right: clamp(1rem, calc(32 / 1366 * 100vw), 2rem);
    font-size: 3rem;
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;
    line-height: 2.5rem;
    letter-spacing: .1em;
  }

  > p {
    flex: 1 0 100%;
    padding: 0 1rem;
    font-size: clamp(1.5rem, calc(40 / 1366 * 100vw), 2.5rem);
    line-height: 1.75em;
    letter-spacing: -.03em;
    font-family: 'Open Sans', sans-serif;
    text-wrap: balance;

    > span.marker {
      -webkit-box-decoration-break: clone;
      -moz-background-inline-policy: clone;
      box-decoration-break: clone;
      padding: .15em .2em;
      background-color: var(--primary);
      border-radius: .25rem;
      color: #FFFFFF;

      :root.dark & {
        background-color: var(--primary-d1);
      }

      &:before {
        content: open-quote;
      }

      &:after {
        content: close-quote;
      }
    }
  }
}

body {
  counter-reset: heading;
}

@media (max-width: 1450px) {
  :root {
    scroll-padding-top: 3rem;
  }
}

:is(aside, section) {
  column-width: 20rem;
  column-rule: 1px dotted var(--text-b1);
  column-gap: 3rem;
  padding: 4rem clamp(1rem, calc(32 / 1366 * 100vw), 2rem);

  :is(h2, h3, .block) {
    break-inside: avoid-column;
  }

  > :is(h2, h3) {
    padding-bottom: 2rem;
    font-family: 'Open Sans', sans-serif;
    letter-spacing: -.05em;
  }

  > h2 {
    font-size: clamp(2rem, calc(56 / 1366 * 100vw), 3.5rem);
    line-height: 0.85em;
    counter-increment: heading;
    counter-reset: heading-2;

    &:before {
      content: counter(heading, upper-roman) '.' / '';
      position: absolute;
      transform: translateX(-150%);
      color: var(--primary);
      font-size: .75em;

      @media (max-width: 1450px) {
        transform: translateY(-100%);
        font-size: .5em;
      }
    }
  }

  > h3 {
    font-size: clamp(1.5rem, calc(40 / 1366 * 100vw), 2.5rem);
    line-height: 0.8em;
    counter-increment: heading-2;

    &:before {
      content: counter(heading-2, lower-alpha) '.' / '';
      position: absolute;
      color: var(--primary);
      transform: translateY(-100%);
      font-size: .5em;
    }

    @media (min-width: 1450px) {
      hr+&:before {
        font-size: max(.75em, 1.75rem);
        transform: translateX(-150%);
      }
    }
  }

  :is(hr, .full-row) {
    column-span: all;
  }

  hr {
    margin-top: 3rem;
    border: none;
  }

  p {
    padding-bottom: 1rem;
    hyphens: auto;
  }

  img {
    object-fit: cover;
    width: 100%;
    max-width: 100%;
    border-radius: .2rem;
  }

  > ul {
    > li {
      break-inside: avoid-column;
      margin-bottom: 2rem;
      border-bottom: .15rem dotted var(--text);

      :is(h3, h4) {
        padding-bottom: .5rem;
        font-size: 1.5rem;
      }

      a {
        display: block;
        padding-bottom: .5rem;
        color: var(--primary-b1);

        &:after {
          float: right;
          font-size: 1.2rem;
        }

        &[target="_blank"]:after {
          content: '\29C9' / '';
        }

        &[href^="#"]:after {
          content: '\21B3' / '';
        }

        &:is([download], [is="print-page"]):after {
          content: '\2193' / '';
        }

        &.disabled {
          color: var(--secondary);
          pointer-events: none;

          &:after {
            content: none;
          }
        }
      }
    }

    &.grid {
      display: grid;
      gap: .5rem;
      grid-template-columns: repeat(auto-fill, 1fr);
      grid-auto-flow: row dense;

      @media (min-width: 24rem) {
        grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));
      }

      >li {
        margin: 0;
        border: none;

        >a {
          text-underline-offset: .1em;
          padding-bottom: 0;
          line-height: 2em;
          color: var(--text);

          &:after {
            color: var(--primary-d1);
          }
        }
      }

      &.dense {
        gap: .4rem;

        @media (min-width: 16rem) {
          grid-template-columns: repeat(auto-fill, minmax(24rem, 1fr));
        }  

        >li {
          max-width: 100%;

          >a:after {
            font-size: 1rem;
          }
        }
      }
    }
  }
}

@media only screen and (min-width: 50rem) {
  @media not (prefers-reduced-motion) {
    main > section,
    main ~ section {
      animation: reveal-section ease-out both;
      animation-timeline: view(block);
      animation-range: entry 0 entry 50vh;
    }

    @keyframes reveal-section {
      from {
        opacity: 0;
        filter: blur(8rem);
      }
    }
  }
}

form {
  display: grid;

  @media (min-width: 50rem) {
    grid-template-columns: 1fr 2fr;
  }

  :nth-child(odd) {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 600;
  }

  :is(input, textarea) {
    max-width: 100%;
    margin-bottom: 2rem;
    background-color: var(--background-d1);
    border-bottom: .2rem dotted currentcolor;
    border-radius: .2rem .2rem 0 0;
    font: inherit;
    color: inherit;

    &:focus {
      outline-width: .15rem;
      outline-style: solid;
      outline-color: var(--primary);
      outline-offset: .25rem;
    }

    &::placeholder {
      color: var(--text-b1);
    }

    &[readonly] {
      background-color: var(--background-b1);
      cursor: wait;
      border-color: transparent;
      color: var(--text-b1);
    }
  }

  input {
    padding: 0 1rem;
    line-height: 3rem;

    &[type="submit"] {
      margin-top: 1rem;
      margin-right: auto;
      padding: 0 2rem;
      background-color: var(--secondary);
      cursor: pointer;
      border-bottom: none;
      border-radius: .2rem;
      color: var(--background);

      &[readonly] {
        background-color: var(--text-b1);
        cursor: wait;
        color: var(--background-d1);
      }
    }
  }

  textarea {
    resize: none;
    overflow: hidden;
    min-height: 12rem;
    padding: 1rem;
    padding-bottom: 3rem;
    line-height: 2rem;
  }

  output {
    color: var(--primary);
    font-size: 1.5rem;
    grid-column-start: 2;
  }
}
